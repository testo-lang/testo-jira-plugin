
network internet {
	mode: "nat"
}

machine jira_plugin_builder {
	cpus: 4
	ram: 8Gb
	iso: "${ISO_DIR}/ubuntu-20.04.1-desktop-amd64.iso"
	disk main: {
		size: 20Gb
	}

	nic nat: {
		attached_to: "internet"
	}
}

param login "testo"
param password "1111"
param hostname "builder"

test jira_builder_install_ubuntu {
	jira_plugin_builder {
		start
		if (check "Language" timeout 10s) {
			wait "Language"; press Enter
			wait "Try Ubuntu without installing"
			press Down*2, Enter
			wait "Welcome" timeout 3m
			mouse click "Continue".from_right(0).center_bottom()
		} else {
			wait "Welcome" timeout 3m
			mouse click "Install Ubuntu".from_right(0).center_bottom()
		}
		wait "Keyboard layout"
		mouse click "Continue".center_bottom()
		wait "Updates and other software"
		mouse click "Minimal installation"
		mouse click "Continue".from_right(0).center_bottom()
		wait "Installation type"
		mouse click "Install Now".from_right(0).center_bottom()
		wait "Write the changes to disks?"
		mouse click "Continue".from_right(0).center_bottom()

		wait "Where are you?"
		mouse click "Continue".from_right(0).center_bottom()

		wait "Who are you?"
		type "${login}"; press Tab; press LeftCtrl + A; press Backspace; type "${hostname}"
		mouse click "Choose a password".right_center().move_right(30)
		type "${password}"; press Tab; type "${password}"
		mouse click "Log in automatically"
		mouse click "Continue".from_right(0).center_bottom()

		wait "Installation Complete" timeout 30m
		mouse click "Restart Now"

		wait "Please remove the installation medium"; unplug dvd;
		sleep 3s; press Enter

		wait "Activities" timeout 5m
	}
}

macro run_app(app) {
	mouse click "Activities"
	mouse click "Type to search"; type "${app}";
	sleep 2s
	press Enter
}

macro enter_sudo(login="${login}", password="${password}") {
	type "sudo su"; press Enter
	wait "[sudo] password"; type "${password}"; press Enter
	wait "root@${hostname}"

}

test jira_builder_update_software: jira_builder_install_ubuntu {
	jira_plugin_builder {
		mouse click "Skip".center_bottom();
		wait "Livepatch"; mouse click "Next".from_right(0).center_bottom()
		wait "Help improve Ubuntu"; mouse click "Next".from_right(0).center_bottom()
		wait "Privacy"; mouse click "Next".from_right(0).center_bottom()
		wait "Ready to go"; mouse click "Done".from_right(0).center_bottom()

		run_app("Software Updater")

		if (check "unattended-upgr to exit" timeout 20s) {
			run_app("Terminal")
			wait "${login}@${hostname}"
			enter_sudo()
			type "killall unattended-upgr"; press Enter
			type "exit"; press Enter
			wait "${login}@${hostname}"
			type "exit"; press Enter
		}

		wait "Updated software has been issued" timeout 5m; mouse click "Install Now".center_bottom()
		wait "The computer needs to restart" timeout 20m; mouse click "Restart Now"

		sleep 5s; wait "Trash" timeout 5m
	}
}

[no_snapshots: true]
test jira_builder_configure: jira_builder_update_software {
	jira_plugin_builder {
		run_app("Settings"); mouse click "Power"
		mouse click "5 minutes"
		mouse click "15 minutes"; sleep 500ms
		mouse click "15 minutes"; mouse click "Never"

		mouse click "Power".from_left(0); press Down
		mouse move 0 0; mouse click "Displays"
		mouse click "800 x 600"; mouse click "1920 x 1080"
		mouse click "Apply".from_right(0)
		mouse click "Keep Changes"
		wait !"Keep Changes"
		press LeftAlt + F4; wait !"Power"
	}
}

[no_snapshots: true]
test jira_builder_install_ga: jira_builder_configure {
	jira_plugin_builder {
		run_app("Terminal")
		wait "${login}@${hostname}"
		plug dvd "${ISO_DIR}/testo-guest-additions.iso"

		enter_sudo()

		type "mount /dev/cdrom /media"; press Enter
		wait "device write-protected"
		type "dpkg -i /media/testo-guest-additions.deb"; press Enter
		wait "Processing triggers for systemd"
		exec bash "echo hello world"

		exec bash "umount /media"
		unplug dvd
		sleep 2s
	}
}

test jira_builder_install_sdk: jira_builder_install_ga {
	jira_plugin_builder {
		exec bash "hwclock --hctosys "
		exec bash """
			echo "deb https://packages.atlassian.com/debian/atlassian-sdk-deb/ stable contrib" >>/etc/apt/sources.list
			wget https://packages.atlassian.com/api/gpg/key/public
			apt-key add public
			apt update
		"""

		exec bash "apt install -y openjdk-8-jdk atlassian-plugin-sdk"
	}
}

test jira_builder_init_jira_part1: jira_builder_install_sdk {
	jira_plugin_builder {
		run_app("Terminal")
		wait "${login}@${hostname}"
		press LeftAlt + F10
		enter_sudo()
		type "mkdir -p /opt/testo_jira_plugin"; press Enter
		type "cd /opt/testo_jira_plugin"; press Enter
		type "atlas-create-jira-plugin"; press Enter

		wait "groupId:" timeout 15m; type "com.atlassian.testo"; press Enter
		wait "artifactId:"; type "TestoPlugin"; press Enter
		wait "version:"; type "1.0.0-SNAPSHOT"; press Enter
		wait "package:"; type "com.atlassian.testo.TestoPlugin"; press Enter
		wait "Java Config"; press Enter
		wait "Y:"; press Enter

		wait "BUILD SUCCESS" timeout 5m;
		sleep 2s
		type "cd TestoPlugin"; press Enter

		copyto "${PLUGIN_SRC_DIR}/pom.xml" "/opt/testo_jira_plugin/TestoPlugin/pom.xml"

		type "atlas-run"; press Enter
		wait "JIRA has been upgraded" timeout 2h
		sleep 10s
	}
}

test jira_builder_init_jira_part2: jira_builder_init_jira_part1 {
	jira_plugin_builder {
		run_app("Firefox")
		wait "Welcome to Firefox"
		mouse click "enter address"; sleep 2s
		type "http://localhost:2990/jira"; press Enter
		wait "System Dashboard"
		type "admin"; press Tab; type "admin"; press Tab; sleep 200ms; press Space

		mouse click "Log In".from_bottom(0)
		mouse click "Save".from_right(0)

		mouse click "Dismiss".from_left(0)
		wait "Welcome to Jira, admin!"
		mouse click "Continue".from_bottom(0)

		wait "avatar"
		mouse click "Next".from_right(0)
		wait "Welcome!"

		mouse click "Create sample project"
		wait "Create project with sample data";
		mouse click "Next".from_bottom(0)
		wait "Project management"
		type "Sample"; press Tab, backspace; type "SAMPLE"
		mouse move 0 0
		mouse click "Submit"

		wait "Open issues" timeout 2m; sleep 5s
	}
}

test jira_builder_install_tm4j: jira_builder_init_jira_part2 {
	jira_plugin_builder {
		press LeftAlt + F10; sleep 1s
		press LeftAlt + Tab; sleep 1s
		mouse rclick 500 600
		mouse click "New Window"
		wait "${login}@${hostname}"

		copyto "../misc/tm4j.lic" "/opt/tm4j.lic"
		type "gedit /opt/tm4j.lic"; press Enter
		wait "Tab Width"
		press LeftCtrl + A, LeftCtrl + C, LeftAlt + F4 interval 100ms
		wait !"Tab Width"
		press LeftAlt + F4
		press LeftAlt + Tab; sleep 1s

		mouse click "Ok, got it"
		mouse click "begin expiring in 3".right_center().move_right(40)
		sleep 1s; mouse click "OK,got it"
		mouse click "Search".from_top(0).right_center().move_right(200)
		mouse click "Add-ons"
		mouse click "Manage add-ons".from_left(0)
		wait "User-installed add-ons"
		mouse click "Find new add-ons".from_left(0)
		wait "Atlassian Marketplace for JIRA"; sleep 10s
		mouse click "Search the Marketplace"
		type "TM4J"; press Enter
		wait "Test Management for Jira"
		mouse click "Free trial".from_top(0)
		wait "Accept terms"
		mouse click "Accept".from_bottom(0)
		wait "Installing TM4J"
		wait "You will be redirected" timeout 10m; mouse click "Close".from_right(0); sleep 1s
		mouse click "Manage".from_right(0)
		wait "License key"
		press PAGEDOWN; sleep 1s
		mouse click "License key".right_center().move_right(50); sleep 500ms
		press LeftCtrl+V
		mouse click "Update".from_bottom(0)
		wait "Your trial is expiring"; press PageUp
		sleep 5s
	}
}

test jira_builder_create_a_test: jira_builder_install_tm4j {
	jira_plugin_builder {
		mouse click "Tests".from_top(0)
		mouse click "Project Settings page"
		wait "Test Management for Jira is disabled"
		mouse click "Off".from_right(0).move_left(30); wait "Issue Types"
		mouse click "Tests".from_top(0)
		mouse click "Create a test case"
		wait "Create Test Case"

		mouse click "Name".from_top(0).center_bottom().move_down(20)
		type "Some test"; press Tab; sleep 200ms; type "Some objective"
		mouse click "Traceability"
		wait "Confluence"
		mouse click "Issues".from_top(1).right_center().move_right(1710)
		wait "Search Issues"; type "SAMPLE-1"; press Enter
		mouse click "This is your first task"; mouse click "Add".from_bottom(0)
		sleep 2s
	}
}

test jira_test_testo_plugin: jira_builder_create_a_test {
	jira_plugin_builder {
		exec bash "rm -rf /opt/testo_jira_plugin/TestoPlugin/src/*"
		copyto "${PLUGIN_SRC_DIR}/src/main" "/opt/testo_jira_plugin/TestoPlugin/src/main"
		exec bash """
			cd /opt/testo_jira_plugin/TestoPlugin/
			atlas-mvn package
		"""
		abort "stop here"
	}
}
