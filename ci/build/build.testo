
network internet {
	mode: "nat"
}

machine jira_plugin_builder {
	cpus: 4
	ram: 8Gb
	iso: "${ISO_DIR}/ubuntu-20.04.1-desktop-amd64.iso"
	disk main: {
		size: 20Gb
	}

	nic nat: {
		attached_to: "internet"
	}
}

param login "testo"
param password "1111"
param hostname "builder"

test jira_builder_install_ubuntu {
	jira_plugin_builder {
		start
		if (check "Language" timeout 10s) {
			wait "Language"; press Enter
			wait "Try Ubuntu without installing"
			press Down*2, Enter
			wait "Welcome" timeout 3m
			mouse click "Continue".from_right(0).center_bottom()
		} else {
			wait "Welcome" timeout 3m
			mouse click "Install Ubuntu".from_right(0).center_bottom()
		}
		wait "Keyboard layout"
		mouse click "Continue".center_bottom()
		wait "Updates and other software"
		mouse click "Minimal installation"
		mouse click "Continue".from_right(0).center_bottom()
		wait "Installation type"
		mouse click "Install Now".from_right(0).center_bottom()
		wait "Write the changes to disks?"
		mouse click "Continue".from_right(0).center_bottom()

		wait "Where are you?"
		mouse click "Continue".from_right(0).center_bottom()

		wait "Who are you?"
		type "${login}"; press Tab; press LeftCtrl + A; press Backspace; type "${hostname}"
		mouse click "Choose a password".right_center().move_right(30)
		type "${password}"; press Tab; type "${password}"
		mouse click "Log in automatically"
		mouse click "Continue".from_right(0).center_bottom()

		wait "Installation Complete" timeout 30m
		mouse click "Restart Now"

		wait "Please remove the installation medium"; unplug dvd;
		sleep 3s; press Enter

		wait "Activities" timeout 5m
	}
}

macro run_app(app) {
	mouse click "Activities"
	mouse click "Type to search"; type "${app}";
	sleep 2s
	press Enter
}

macro enter_sudo(login="${login}", password="${password}") {
	type "sudo su"; press Enter
	wait "[sudo] password"; type "${password}"; press Enter
	wait "root@${hostname}"

}

test jira_builder_update_software: jira_builder_install_ubuntu {
	jira_plugin_builder {
		mouse click "Skip".center_bottom();
		wait "Livepatch"; mouse click "Next".from_right(0).center_bottom()
		wait "Help improve Ubuntu"; mouse click "Next".from_right(0).center_bottom()
		wait "Privacy"; mouse click "Next".from_right(0).center_bottom()
		wait "Ready to go"; mouse click "Done".from_right(0).center_bottom()

		run_app("Software Updater")

		if (check "unattended-upgr to exit" timeout 20s) {
			run_app("Terminal")
			wait "${login}@${hostname}"
			enter_sudo()
			type "killall unattended-upgr"; press Enter
			type "exit"; press Enter
			wait "${login}@${hostname}"
			type "exit"; press Enter
		}

		wait "Updated software has been issued" timeout 5m; mouse click "Install Now".center_bottom()
		wait "The computer needs to restart" timeout 20m; mouse click "Restart Now"

		sleep 5s; wait "Trash" timeout 5m
	}
}

[no_snapshots: true]
test jira_builder_configure: jira_builder_update_software {
	jira_plugin_builder {
		run_app("Settings"); mouse click "Power"
		mouse click "5 minutes"
		mouse click "15 minutes"; sleep 500ms
		mouse click "15 minutes"; mouse click "Never"

		mouse click "Power".from_left(0); press Down
		mouse move 0 0; mouse click "Displays"
		mouse click "800 x 600"; mouse click "1920 x 1080"
		mouse click "Apply".from_right(0)
		mouse click "Keep Changes"
		wait !"Keep Changes"
		press LeftAlt + F4; wait !"Power"
	}
}

[no_snapshots: true]
test jira_builder_install_ga: jira_builder_configure {
	jira_plugin_builder {
		run_app("Terminal")
		wait "${login}@${hostname}"
		plug dvd "${ISO_DIR}/testo-guest-additions.iso"

		enter_sudo()

		type "mount /dev/cdrom /media"; press Enter
		wait "device write-protected"
		type "dpkg -i /media/testo-guest-additions.deb"; press Enter
		wait "Processing triggers for systemd"
		exec bash "echo hello world"

		exec bash "umount /media"
		unplug dvd
		sleep 2s
	}
}

test jira_builder_install_sdk: jira_builder_install_ga {
	jira_plugin_builder {
		exec bash "hwclock --hctosys "
		exec bash """
			echo "deb https://packages.atlassian.com/debian/atlassian-sdk-deb/ stable contrib" >>/etc/apt/sources.list
			wget https://packages.atlassian.com/api/gpg/key/public
			apt-key add public
			apt update
		"""

		exec bash "apt install -y openjdk-8-jdk atlassian-plugin-sdk"
	}
}

test jira_builder_init_jira_part1: jira_builder_install_sdk {
	jira_plugin_builder {
		run_app("Terminal")
		wait "${login}@${hostname}"
		press LeftAlt + F10
		enter_sudo()
		type "mkdir -p /opt/testo_jira_plugin"; press Enter
		type "cd /opt/testo_jira_plugin"; press Enter
		type "atlas-create-jira-plugin"; press Enter

		wait "groupId:" timeout 15m; type "com.atlassian.testo"; press Enter
		wait "artifactId:"; type "TestoPlugin"; press Enter
		wait "version:"; type "1.0.0-SNAPSHOT"; press Enter
		wait "package:"; type "com.atlassian.testo.TestoPlugin"; press Enter
		wait "Java Config"; press Enter
		wait "Y:"; press Enter

		wait "BUILD SUCCESS" timeout 5m;
		sleep 2s
		type "cd TestoPlugin"; press Enter

		copyto "${PLUGIN_SRC_DIR}/pom.xml" "/opt/testo_jira_plugin/TestoPlugin/pom.xml"

		type "atlas-run"; press Enter
		wait "JIRA has been upgraded" timeout 2h
		sleep 10s
	}
}


